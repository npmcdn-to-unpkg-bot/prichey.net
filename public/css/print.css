html, body, div, span, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
abbr, address, cite, code,
del, dfn, em, img, ins, kbd, q, samp,
small, strong, sub, sup, var,
b, i,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, figcaption, figure,
footer, header, hgroup, menu, nav, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent; }

main, article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  overflow-y: scroll;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  text-rendering: optimizeLegibility !important;
  -webkit-font-smoothing: antialiased !important; }

body {
  line-height: 1; }

*,
*:before,
*:after {
  position: relative;
  -webkit-box-sizing: inherit;
          box-sizing: inherit; }
  @media (max-width: 959px) {
    * *,
    *:before *,
    *:after * {
      -webkit-tap-highlight-color: transparent; } }

img,
object,
embed {
  max-width: 100%;
  height: auto; }

blockquote, q {
  quotes: none; }

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none; }

a {
  margin: 0;
  padding: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent; }

del {
  text-decoration: line-through; }

abbr[title], dfn[title] {
  border-bottom: 1px dotted;
  cursor: help; }

i,
em {
  font-style: italic; }

b,
strong {
  font-weight: bold; }

q {
  quotes: "\201C" "\201D" "\2018" "\2019"; }

table {
  border-collapse: collapse;
  border-spacing: 0;
  font-size: inherit;
  font: 100%; }

th {
  font-weight: bold;
  vertical-align: bottom; }

td {
  font-weight: normal;
  vertical-align: top; }

input,
select {
  vertical-align: middle; }

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

button,
input,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
  margin: 0; }

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

mark {
  background: #ff0;
  color: #000; }

pre {
  white-space: pre;
  white-space: pre-wrap;
  white-space: pre-line;
  word-wrap: break-word; }

pre,
code,
kbd,
samp {
  font-family: monospace, sans-serif; }

/*
 * Returns a color with an optional tone from the map
 *
 * @param {string}  $color_name     The base name of the color
 * @param {tone}    ($tone|'base')  The tone of that color or 'base'
 *
 * @return {string} The matching color's value from the map
 */
head {
  font-family: "mq-tiny";
  font-family: "mq-mini";
  font-family: "mq-small";
  font-family: "mq-medium";
  font-family: "mq-large";
  font-family: "mq-xlarge";
  font-family: "mq-xxlarge";
  font-family: "mq-xxxlarge"; }

title {
  font-family: "mq-tiny, mq-mini, mq-small, mq-medium, mq-large, mq-xlarge, mq-xxlarge, mq-xxxlarge"; }

.browse-happy p {
  display: block;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%); }

.visually-hidden {
  margin: -1px;
  padding: 0;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip: rect(0, 0, 0, 0);
  position: absolute; }

.home .links {
  list-style: none;
  padding: 0;
  margin: 0; }

input[type="submit"] {
  background: transparent;
  outline: none;
  border: 0;
  padding: 0;
  margin: 0;
  font-size: 1em;
  cursor: pointer; }

.cf,
.clear,
.clearfix {
  zoom: 1; }
  .cf:before,
  .clear:before,
  .clearfix:before, .cf:after,
  .clear:after,
  .clearfix:after {
    content: "\0020";
    display: block;
    height: 0;
    overflow: hidden; }
  .cf:after,
  .clear:after,
  .clearfix:after {
    clear: both; }

@font-face {
  font-family: "symbols";
  src: url("../fonts/symbols/symbols.eot");
  src: url("../fonts/symbols/symbols.eot?#iefix") format("eot"), url("../fonts/symbols/symbols.woff") format("woff"), url("../fonts/symbols/symbols.ttf") format("truetype"), url("../fonts/symbols/symbols.svg#symbols") format("svg");
  font-weight: normal;
  font-style: normal; }

.symbol:before {
  font-family: "symbols";
  width: 1em;
  margin: 0;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-align: center;
  text-decoration: inherit;
  text-transform: none;
  line-height: 1em;
  speak: none; }

.s-book:before {
  content: "\E001"; }

.s-briefcase:before {
  content: "\E002"; }

.sprite-sample {
  background-image: url("../images/sprites/sprite-sample.png"); }

@media (-webkit-min-device-pixel-ratio: 2), (-webkit-min-device-pixel-ratio: 0.75), (min-resolution: 72dpi) {
  .sprite-sample {
    background-image: url("../images/sprites/sprite-sample@2x.png");
    background-size: 200px 105px; } }

.wysiwyg p, .wysiwyg li, p,
dl,
address {
  font-size: 1.6rem;
  line-height: 1.5; }

.wysiwyg h5, .wysiwyg h6 {
  font-size: 2rem;
  line-height: 1.45;
  font-size: 2.5rem;
  line-height: 1.44; }

.wysiwyg h3, .wysiwyg h4 {
  font-size: 2.5rem;
  line-height: 1.44;
  font-size: 3.1rem;
  line-height: 1.45161; }

.wysiwyg h1, .wysiwyg h2 {
  font-size: 3.1rem;
  line-height: 1.45161;
  font-size: 3.9rem;
  line-height: 1.46154; }

.wysiwyg h1, .wysiwyg h2 {
  font-weight: 300; }

.wysiwyg h3, .wysiwyg h4 {
  font-weight: 400; }

.wysiwyg h5, .wysiwyg h6 {
  font-weight: 700; }

.wysiwyg a {
  color: #E74C3C; }

.wysiwyg p, .wysiwyg ul, .wysiwyg ol {
  margin-bottom: 3rem; }

.wysiwyg ul, .wysiwyg ol {
  margin-left: 3rem; }

::-moz-selection {
  background: #777;
  color: #fff;
  text-shadow: none; }

::selection {
  background: #777;
  color: #fff;
  text-shadow: none; }

html {
  font-size: 62.5%; }

body {
  background: #fff;
  color: #2C3E50;
  font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
  font-weight: normal;
  font-size: 16px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.004); }

a {
  color: #2C3E50;
  text-decoration: none; }
  a:hover, a:focus {
    color: #999; }
  a:focus {
    outline: none; }

h1,
h2,
h3,
h4,
h5,
h6 {
  line-height: 1; }
  h1 a,
  h2 a,
  h3 a,
  h4 a,
  h5 a,
  h6 a {
    color: #000; }

p,
li,
dt,
dd {
  font-weight: normal;
  font-style: normal; }

li {
  line-height: 1; }

input,
textarea,
select {
  outline: none;
  border-radius: 0;
  border: 0.1rem solid #eee;
  padding: 0.5rem 1rem;
  margin: 0;
  width: 100%;
  font-size: 1.3rem; }

input,
textarea,
label {
  color: #eee; }

select {
  background: #fff;
  height: 3rem;
  padding: 0.5rem 1rem; }

input[type=search] {
  -webkit-appearance: textfield; }
  input[type=search]::-webkit-search-cancel-button, input[type=search]::-webkit-search-decoration, input[type=search]::-webkit-search-results-button, input[type=search]::-webkit-search-results-decoration {
    -webkit-appearance: none; }

select[multiple] {
  height: auto; }

input[type="checkbox"] {
  vertical-align: bottom; }

input[type="radio"] {
  vertical-align: text-bottom; }

label {
  font-weight: 400; }

input:focus,
textarea:focus {
  outline: none;
  border-color: #eee;
  color: #000; }

input[type="submit"] {
  border-radius: 0;
  height: auto; }

.placeholder {
  color: #000; }

input::-webkit-input-placeholder,
textarea::-webkit-input-placeholder {
  color: #000; }

input:-moz-placeholder,
textarea:-moz-placeholder {
  color: #000; }

input::-moz-placeholder,
textarea::-moz-placeholder {
  color: #000; }

input:-ms-input-placeholder,
textarea:-ms-input-placeholder {
  color: #000; }

input:focus::-webkit-input-placeholder,
textarea:focus::-webkit-input-placeholder {
  color: blue; }

input:focus:-moz-placeholder,
textarea:focus:-moz-placeholder {
  color: blue; }

input:focus::-moz-placeholder,
textarea:focus::-moz-placeholder {
  color: blue; }

input:focus:-ms-input-placeholder,
textarea:focus:-ms-input-placeholder {
  color: blue; }

button::-moz-focus-inner {
  padding: 0;
  border: 0; }

input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0; }

input[type=number] {
  -moz-appearance: textfield; }

input[type="text"],
input[type="time"],
input[type="url"],
input[type="email"],
input[type="password"],
input[type="button"],
input[type="submit"],
textarea {
  -webkit-appearance: none;
  -moz-appearance: none; }

.browse-happy {
  background-color: transparent;
  background-color: rgba(119, 119, 119, 0.97);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#F7777777,endColorstr=#F7777777);
  zoom: 1;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 800; }
  .browse-happy p {
    display: block;
    width: 800px;
    height: 200px;
    font-size: 2em;
    line-height: 1.3em;
    text-align: center;
    color: #fff; }
    .browse-happy p a {
      display: inline-block;
      color: #59b6fd;
      line-height: 1em;
      border-bottom: 1px solid rgba(89, 182, 253, 0.2); }
      .browse-happy p a:hover {
        color: rgba(89, 182, 253, 0.8); }

html,
body.home,
.root {
  height: 100%;
  width: 100%;
  overflow: hidden; }

.home .name,
.home .cube-wrap,
.home .links {
  position: absolute;
  display: block; }

.home .name,
.home .links {
  width: 100%;
  text-align: center; }

.home .name {
  top: 5%;
  text-transform: lowercase;
  font-size: 32px; }

.home .cube-wrap {
  width: 50vh;
  height: 50vh;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%); }

.home .links {
  bottom: 5%;
  font-size: 18px; }
  .home .links li {
    display: inline-block; }
    .home .links li:after {
      content: ' | ';
      display: inline; }
    .home .links li:last-child:after {
      display: none; }

/*# sourceMappingURL=data:application/json;base64, */
